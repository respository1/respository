package com.hzblogs.dao;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.hzblogs.bean.Article;


public interface ArticleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table article_info
     *
     * @mbg.generated Wed Jul 17 13:36:21 CST 2021
     */
    int deleteByPrimaryKey(Integer articleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table article_info
     *
     * @mbg.generated Wed Jul 17 13:36:21 CST 2021
     */
    int insert(Article record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table article_info
     *
     * @mbg.generated Wed Jul 17 13:36:21 CST 2021
     */
    int insertSelective(Article record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table article_info
     *
     * @mbg.generated Wed Jul 17 13:36:21 CST 2021
     */
    Article selectByPrimaryKey(Integer articleId);
    /**
   	 * 根据标签id查询所有文章
   	 * @param articleLabelid
   	 * @return List<ArticleModel>
   	 */
   	List<Article> selectByLabelid(Integer articleLabelid);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table article_info
     *
     * @mbg.generated Wed Jul 17 13:36:21 CST 2021
     */
    int updateByPrimaryKeySelective(Article record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table article_info
     *
     * @mbg.generated Wed Jul 17 13:36:21 CST 2021
     */
    int updateByPrimaryKeyWithBLOBs(Article record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table article_info
     *
     * @mbg.generated Wed Jul 17 13:36:21 CST 2021
     */
    int updateByPrimaryKey(Article record);
    /**
     *  根据articleId且articleUserid，查询文章
     * @param articleId
     * @param articleUserid
     * @return Article
     */
	Article selectByAidAndUid(@Param("articleId")Integer articleId,@Param("articleUserid") Integer articleUserid);
	/**
	 * 根据用户id 查询它关注的人文章权限为为博友的文章，所有公开的文章，个人所有文章的总数
	 * @param userid
	 * @return int
	 */
	int selectByArticleCount(Integer userid);
	/**
	 * 根据登录用户id 查询它关注的人文章权限为为博友的文章，所有公开的文章，个人所有文章,有分页
	 * @param userid
	 * @return List<Article>
	 */
	List<Article> selectByArticleUserid(@Param("userid")Integer userid,@Param("begin") Integer begin,@Param("recordSize") Integer recordSize);
	/**
	 * 根据用户id 查询个人所有文章,有分页
	 * @param userid
	 * @param labelId 
	 * @return List<Article>
	 */
	List<Article> selectAllByUserid(@Param("userid")Integer userid,@Param("labelId")Integer labelId, @Param("begin") Integer begin,@Param("recordSize") Integer recordSize);
	/**
	 * 根据用户id 查询个人所有文章的总数
	 * @param userid
	 * @param labelId 
	 * @return int
	 */
	int selectAllCountByUserid(@Param("userid")Integer userid, @Param("labelId") Integer labelId);
	/**
	 *  根据登录用户id 查询它关注的人文章权限为为博友的文章，所有公开的文章，个人所有文章，浏览量最高前12记录
	 * @param articleUserid
	 * @return List<Article>
	 */
	List<Article> selectArticleTOPTwelveByUserId(Integer articleUserid);
   
}